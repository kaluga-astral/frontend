name: CI for packages

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Running linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: npm i
      - name: Run eslint
        run: npm run lint

  lintTypes:
    name: Running types linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: npm i
      - name: Run tsc
        run: npm run lint:types

  lintStyles:
    name: Running styles linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: npm i
      - name: Run stylelint
        run: npm run lint:styles

  test:
    name: Running tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm i

      - name: Run vitest
        env:
          CI: true
        run: npm run tests:ci --workspaces --if-present

  # Проверяет, что новые версии пакетов не сломают публикуемые пакеты
  testPublishPackages:
    name: Published tests packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm i

      - name: Set test package version
        id: test-package-version
        run: echo "PACKAGE_VERSION=1.0.0-test.$(date +%s)" >> $GITHUB_OUTPUT

      # Build всех пакетов
      - name: Build @astral/ui
        run: npm run build --workspace=@astral/ui
        env:
          RELEASE_TAG: ${{ steps.test-package-version.outputs.PACKAGE_VERSION }}

      - name: Build @astral/icons
        run: npm run build --workspace=@astral/icons
        env:
          RELEASE_TAG: ${{ steps.test-package-version.outputs.PACKAGE_VERSION }}

      - name: Build @astral/fonts
        run: npm run build --workspace=@astral/fonts
        env:
          RELEASE_TAG: ${{ steps.test-package-version.outputs.PACKAGE_VERSION }}

      - name: Build @astral/illustrations
        run: npm run build --workspace=@astral/illustrations
        env:
          RELEASE_TAG: ${{ steps.test-package-version.outputs.PACKAGE_VERSION }}

      - name: Build @astral/validations
        run: npm run build --workspace=@astral/validations
        env:
          RELEASE_TAG: ${{ steps.test-package-version.outputs.PACKAGE_VERSION }}

      - name: Build @astral/form
        run: npm run build --workspace=@astral/form
        env:
          RELEASE_TAG: ${{ steps.test-package-version.outputs.PACKAGE_VERSION }}

      # Паблишинг всех пакетов
      - name: Publish @astral/ui
        run: npm publish ./packages/ui/lib --tag test
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Publish @astral/icons
        run: npm publish ./packages/icons/lib --tag test
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Publish @astral/fonts
        run: npm publish ./packages/fonts/lib --tag test
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Publish @astral/illustrations
        run: npm publish ./packages/illustrations/lib --tag test
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Publish @astral/validations
        run: npm publish ./packages/validations/lib --tag test
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Publish @astral/form
        run: npm publish ./packages/form/lib --tag test
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      # В example устанавливаются пакеты с тестовыми версиями
      - name: Install deps for example project
        working-directory: ./example
        run: |
          npm i &&
          npm i --save @astral/illustrations@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &&
          npm i --save @astral/ui@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &&
          npm i --save @astral/form@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &&
          npm i --save @astral/icons@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &&
          npm i --save @astral/validations@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &&
          npm i --save @astral/fonts@${{ steps.test-package-version.outputs.PACKAGE_VERSION }}

      - name: Check types
        working-directory: ./example
        run: npm run lint:types

      - name: Build project
        working-directory: ./example
        run: npm run build:dev

      - name: Unpublish tests packages
        run: |
          npm unpublish @astral/illustrations@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &
          npm unpublish @astral/ui@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &
          npm unpublish @astral/form@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &
          npm unpublish @astral/icons@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &
          npm unpublish @astral/validations@${{ steps.test-package-version.outputs.PACKAGE_VERSION }} &
          npm unpublish @astral/fonts@${{ steps.test-package-version.outputs.PACKAGE_VERSION }}
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

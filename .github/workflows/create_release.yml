name: 'Create release'

on:
  push:
    branches: [main]

jobs:
  releasePackages:
    name: Release packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm i

      - name: Generate release
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤ env NEXT_VERSION –∏ CURRENT_VERSION
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build @astral/ui
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm run build --workspace=@astral/ui
        env:
          # NEXT_VERSION —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ semantic-release.config.js
          RELEASE_TAG: ${{ env.NEXT_VERSION }}
      - name: Publish @astral/ui
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm publish ./packages/ui/lib
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Build @astral/icons
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm run build --workspace=@astral/icons
        env:
          RELEASE_TAG: ${{ env.NEXT_VERSION }}
      - name: Publish @astral/icons
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm publish ./packages/icons/lib
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Build @astral/fonts
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm run build --workspace=@astral/fonts
        env:
          RELEASE_TAG: ${{ env.NEXT_VERSION }}
      - name: Publish @astral/fonts
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm publish ./packages/fonts/lib
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Build @astral/illustrations
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm run build --workspace=@astral/illustrations
        env:
          RELEASE_TAG: ${{ env.NEXT_VERSION }}
      - name: Publish @astral/illustrations
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        run: npm publish ./packages/illustrations/lib
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: send telegram message on release
        if: env.CURRENT_VERSION != env.NEXT_VERSION
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_RELEASE_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: html
          message: |
            üöÄ <b>–ë—ã–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–æ–≤ ui-kit !</b>

            –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:

            üì¶  @astral/ui: ${{ env.NEXT_VERSION }}
            üì¶  @astral/fonts: ${{ env.NEXT_VERSION }}
            üì¶  @astral/icons: ${{ env.NEXT_VERSION }}
            üì¶  @astral/illustrations: ${{ env.NEXT_VERSION }}
            üì¶  @astral/form: ${{ env.NEXT_VERSION }}

            ‚ö°Ô∏è <a href="https://github.com/kaluga-astral/frontend/releases/tag/v${{ env.NEXT_VERSION }}">Changelog</a>

            ‚ö°Ô∏è <a href="https://main--61baeff6f06230003a88ef8a.chromatic.com">–°—Ç–µ–Ω–¥ storybook –¥–ª—è ui-kit.</a>

            ‚ö°Ô∏è –ù–æ–≤—ã–π ui-kit - —ç—Ç–æ –Ω–∞—à open source, —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ <a href="${{ github.event.repository.html_url }}">–∑–¥–µ—Å—å</a>. –õ—é–±–æ–π –∂–µ–ª–∞—é—â–∏–π –º–æ–∂–µ—Ç –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.
